# Root Logger command defines the root level of logging and the type of appender. Allows multiple appender types

log4j.rootLogger=DEBUG, ROLLING_FILE

# The line below is used to specify the folder where files will be stored.  This folder location is referenced
# in the line 'log4j.appender.ROLLING_FILE.File=${log}\\log.txt'

log=src\\test\\java\\resources\\logOutput

# ----------Rolling File Appender --------- #
# The Rolling File Appender allows you to specify a maximum file size and maximum file count.  When the file size
# reaches its limit, a new file will be created until the maximum file count is reached.  Logs will not be created
# after max file count is reached.

# The next three lines create an object name, instantiate the file object, and specify where that object will be saved
# (with its naming convention).  Notice that we reference the folder location 'log' (see line above) using '${log}'
# The first line is not necessary, but it make it easier to see the object name and reference it in the root logger
# line above.

log4j.appender.name1=ROLLING_FILE
log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
log4j.appender.ROLLING_FILE.File=${log}\\rolling_Log.txt

# The next three lines establish the logging level, the max file size, and the max file count.
# If no threshold is given, the root level (from the first line above) will be used as a default.

log4j.appender.ROLLING_FILE.Threshold=INFO
log4j.appender.ROLLING_FILE.MaxFileSize=250KB
log4j.appender.ROLLING_FILE.MaxBackupIndex=10

# The next two lines establish the format of the log that is appended to the file

log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.ROLLING_FILE.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} : %-5p: %c{1} - %m%n


# -------------File Appender--------------#
# Stores the logs in a single file.  Will append new logs to the file.  Will not overwrite existing file.

# The next three lines create an object name, instantiate the file object, and specify where that object will be saved
# (with its naming convention).  Notice that we reference the folder location 'log' (see line above) using '${log}'
# The first line is not necessary, but it make it easier to see the object name and reference it in the root logger
# line above.
# The only differences from the Rolling File appender, is that the second line (below) ends with
# .FileAppender rather than .RollingFileAppender, and the file is given a different name from the one above
# (as displayed in the third line below).

log4j.appender.name2=FILE
log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.File=${log}\\log.txt

# The next line establishes the logging level.  If no threshold is given, the root level (from the first line above)
# will be used as a default.

log4j.appender.FILE.Threshold=INFO

# The next two lines establish the format of the log that is appended to the file

log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} : %-5p: %c{1} - %m%n


# ------------Console Appender------------#
# This will display the logs in the IDE Console

# The next three lines create an object name, instantiate the file object, and specify where that object will be
# displayed.

log4j.appender.name3=CONSOLE
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.Target=System.err

# The next line establishes the logging level.  If no threshold is given, the root level (from the first line above)
# will be used as a default.

log4j.appender.CONSOLE.Threshold=INFO

# The next two lines establish the format of the log that is displayed in the Console

log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} : %-5p: %c{1} - %m%n